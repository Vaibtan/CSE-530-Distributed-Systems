syntax = "proto3";

import "market.proto";

message RegisterSellerRequest {
    string ip_address = 1;
    int32 port = 2;
    string uuid = 3;
}

message RegisterSellerResponse {
    enum Status {
        SUCCESS = 0;
        FAILED = 1;
    }
    Status status = 1;
}


message SellItemRequest {
    string product_name = 1;
    enum Category {
        ELECTRONICS = 0;
        FASHION = 1;
        OTHERS = 2;
    }
    int32 quantity = 2;
    string description = 3;
    string seller_address = 4;
    string seller_uuid = 5;
}

message SellItemResponse {
    enum Status {
        SUCCESS = 0;
        FAILED = 1;
    }
    Status status = 1;
    int32 item_id = 2;
}


message UpdateItemRequest {
    int32 item_id = 1;
    int32 new_price = 2;
    int32 new_quantity = 3;
    string seller_address = 4;
    string seller_uuid = 5;
}

message UpdateItemResponse {
    enum Status {
        SUCCESS = 0;
        FAILED = 1;
    }
    Status status = 1;
}

message DeleteItemRequest {
    int32 item_id = 1;
    string seller_address = 2;
    string seller_uuid = 3;
}

message DeleteItemResponse {
    enum Status {
        SUCCESS = 0;
        FAILED = 1;
    }
    Status status = 1;
}

message DisplaySellerItemsRequest {
    string seller_address = 1;
    string seller_uuid = 2;
}

message DisplaySellerItemsResponse {
    message Item {
        int32 item_id = 1;
        string product_name = 2;
        enum Category {
            ELECTRONICS = 0;
            FASHION = 1;
            OTHERS = 2;
        }
        int32 price = 3;
        int32 quantity_remaining = 4;
        string seller_address = 5;
        float rating = 6;
    }
    repeated Item items = 1;
}

service SellerService {
    rpc RegisterSeller(RegisterSellerRequest) returns (RegisterSellerResponse) {}

    rpc SellItem(SellItemRequest) returns (SellItemResponse) {}

    rpc UpdateItem(UpdateItemRequest) returns (UpdateItemResponse) {}

    rpc DeleteItem(DeleteItemRequest) returns (DeleteItemResponse) {}

    rpc DisplaySellerItems(DisplaySellerItemsRequest) returns (DisplaySellerItemsResponse) {}
}
